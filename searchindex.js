Search.setIndex({"docnames": ["ask_youtube_playlists", "ask_youtube_playlists.data_processing", "ask_youtube_playlists.question_answering", "index", "modules"], "filenames": ["ask_youtube_playlists.rst", "ask_youtube_playlists.data_processing.rst", "ask_youtube_playlists.question_answering.rst", "index.rst", "modules.rst"], "titles": ["ask_youtube_playlists package", "ask_youtube_playlists.data_processing package", "ask_youtube_playlists.question_answering package", "Welcome to Ask YouTube Playlists\u2019s documentation!", "ask-youtube-playlists"], "terms": {"data_process": [0, 4], "submodul": [0, 4], "create_docu": [0, 4], "extract_documents_from_list_of_dict": [0, 1], "get_documents_from_directori": [0, 1], "create_embed": [0, 4], "embeddingmodelspec": [0, 1], "model_nam": [0, 1, 2], "model_typ": [0, 1, 2], "max_seq_length": [0, 1], "create_embeddings_pipelin": [0, 1], "create_vectorstor": [0, 1], "get_embedding_model": [0, 1], "get_embedding_spec": [0, 1], "load_embed": [0, 1], "load_hyperparam": [0, 1], "load_vectorstor": [0, 1], "save_json": [0, 1], "save_vectorstor": [0, 1], "download_transcript": [0, 4], "create_chunked_data": [0, 1], "download_playlist": [0, 1], "util": [0, 4], "get_available_directori": [0, 1], "get_devic": [0, 1], "is_youtube_playlist": [0, 1], "question_answ": [0, 4], "extract": [0, 1, 4], "get_extractive_answ": [0, 2], "gener": [0, 4], "llmspec": [0, 2], "max_token": [0, 2], "get_generative_answ": [0, 2], "get_model_spec": [0, 2], "load_model": [0, 2], "retriev": [0, 4], "documentinfo": [0, 2], "document": [0, 1, 2], "score": [0, 2], "playlist_nam": [0, 1, 2], "cosine_dist": [0, 2], "retrieve_from_playlist": [0, 2], "total_number_of_docu": [0, 2], "contain": [1, 2], "function": [1, 2], "creat": 1, "from": [1, 2], "json": 1, "file": 1, "correspond": 1, "python": 1, "object": [1, 2], "json_data": 1, "list": [1, 2], "dict": 1, "text_kei": 1, "str": [1, 2], "text": [1, 2], "sourc": [1, 2], "dictionari": [1, 2], "directory_path": 1, "pathlik": 1, "start_with": 1, "directori": 1, "deprec": 1, "we": 1, "should": 1, "us": [1, 2], "paramet": [1, 2], "union": 1, "o": 1, "path": [1, 2], "usual": 1, "data": 1, "process": 1, "The": [1, 2], "must": 1, "start": [1, 2], "thi": [1, 2], "string": [1, 2], "default": [1, 2], "kei": 1, "field": [1, 2], "vector": [1, 2], "databas": 1, "class": [1, 2], "int": [1, 2], "base": [1, 2], "store": [1, 2], "specif": [1, 2], "an": [1, 2], "embed": [1, 2], "model": [1, 2], "name": [1, 2], "type": [1, 2], "can": 1, "sentenc": [1, 2], "transform": 1, "openai": 1, "maximum": [1, 2], "number": [1, 2], "token": 1, "handl": 1, "retriever_directori": [1, 2], "embedding_model_nam": 1, "max_chunk_s": 1, "min_overlap_s": 1, "use_st_progress_bar": 1, "bool": 1, "true": 1, "none": 1, "set": 1, "up": 1, "given": [1, 2], "step": [1, 2], "doe": 1, "exist": 1, "hyperparam": [1, 2], "yaml": [1, 2], "chunk": 1, "save": 1, "them": 1, "where": 1, "It": [1, 2], "insid": 1, "assum": 1, "playlist": [1, 2], "raw": 1, "each": [1, 2], "video": 1, "charact": 1, "minimum": 1, "overlap": 1, "between": [1, 2], "two": [1, 2], "consecut": 1, "whether": 1, "streamlit": 1, "progress": 1, "bar": 1, "vector_store_typ": 1, "memori": 1, "kwarg": 1, "vectorstor": 1, "return": [1, 2], "current": 1, "onli": 1, "support": 1, "mode": 1, "In": 1, "futur": 1, "mai": 1, "chroma": 1, "db": 1, "well": 1, "order": [1, 2], "abl": 1, "make": 1, "persist": 1, "persist_directori": 1, "argument": 1, "load": [1, 2], "i": [1, 2], "its": [1, 2], "disk": 1, "addit": [1, 2], "pass": 1, "from_docu": 1, "method": [1, 2], "rais": [1, 2], "valueerror": [1, 2], "If": [1, 2], "provid": 1, "when": 1, "embedding_directori": 1, "ndarrai": [1, 2], "ar": 1, "same": 1, "np": [1, 2], "local": 1, "chunked_data": 1, "file_nam": 1, "chroma_vectorstor": 1, "indic": 1, "wa": 1, "code": 1, "download": 1, "transcript": 1, "youtub": 1, "file_path": 1, "size": 1, "A": [1, 2], "url": 1, "data_path": 1, "fals": 1, "pathlib": 1, "video_titl": 1, "video_id": 1, "output_path": 1, "verbos": 1, "titl": 1, "id": 1, "output": 1, "print": 1, "except": 1, "cannot": 1, "data_directori": 1, "avail": [1, 2], "cuda": 1, "gpu": 1, "otherwis": 1, "cpu": 1, "link": 1, "check": 1, "relat": 1, "These": 1, "follow": 1, "1": [1, 2], "2": [1, 2], "you": 1, "decid": 1, "3": [1, 2], "perform": 2, "question": 2, "answer": 2, "context": 2, "deepset": 2, "roberta": 2, "squad2": 2, "option": 2, "float": 2, "end": 2, "integ": 2, "inform": 2, "languag": 2, "relevant_docu": 2, "temperatur": 2, "max_length": 2, "ask": 2, "user": 2, "relev": 2, "length": 2, "0": 2, "7": 2, "1024": 2, "basellm": 2, "higher": 2, "more": 2, "creativ": 2, "128": 2, "llm": 2, "most": 2, "namedtupl": 2, "about": 2, "langchain": 2, "schema": 2, "rang": 2, "which": 2, "belong": 2, "alia": 2, "config_filenam": 2, "static": 2, "question_embed": 2, "document_embed": 2, "calcul": 2, "cosin": 2, "distanc": 2, "classmethod": 2, "n_document": 2, "thei": 2, "rank": 2, "all": 2, "ones": 2, "pose": 2, "tupl": 2, "sort": 2, "descend": 2, "properti": 2, "total": 2, "implement": 2, "system": 2, "consist": 2, "three": 2, "compon": 2, "index": 3, "modul": [3, 4], "search": 3, "page": 3, "ask_youtube_playlist": 4, "packag": 4, "subpackag": 4, "content": 4}, "objects": {"": [[0, 0, 0, "-", "ask_youtube_playlists"]], "ask_youtube_playlists": [[1, 0, 0, "-", "data_processing"], [2, 0, 0, "-", "question_answering"]], "ask_youtube_playlists.data_processing": [[1, 0, 0, "-", "create_documents"], [1, 0, 0, "-", "create_embeddings"], [1, 0, 0, "-", "download_transcripts"], [1, 0, 0, "-", "utils"]], "ask_youtube_playlists.data_processing.create_documents": [[1, 1, 1, "", "extract_documents_from_list_of_dicts"], [1, 1, 1, "", "get_documents_from_directory"]], "ask_youtube_playlists.data_processing.create_embeddings": [[1, 2, 1, "", "EmbeddingModelSpec"], [1, 1, 1, "", "create_embeddings_pipeline"], [1, 1, 1, "", "create_vectorstore"], [1, 1, 1, "", "get_embedding_model"], [1, 1, 1, "", "get_embedding_spec"], [1, 1, 1, "", "load_embeddings"], [1, 1, 1, "", "load_hyperparams"], [1, 1, 1, "", "load_vectorstore"], [1, 1, 1, "", "save_json"], [1, 1, 1, "", "save_vectorstore"]], "ask_youtube_playlists.data_processing.create_embeddings.EmbeddingModelSpec": [[1, 3, 1, "id0", "max_seq_length"], [1, 3, 1, "id1", "model_name"], [1, 3, 1, "id2", "model_type"]], "ask_youtube_playlists.data_processing.download_transcripts": [[1, 1, 1, "", "create_chunked_data"], [1, 1, 1, "", "download_playlist"], [1, 1, 1, "", "download_transcript"]], "ask_youtube_playlists.data_processing.utils": [[1, 1, 1, "", "get_available_directories"], [1, 1, 1, "", "get_device"], [1, 1, 1, "", "is_youtube_playlist"]], "ask_youtube_playlists.question_answering": [[2, 0, 0, "-", "extractive"], [2, 0, 0, "-", "generative"], [2, 0, 0, "-", "retriever"]], "ask_youtube_playlists.question_answering.extractive": [[2, 1, 1, "", "get_extractive_answer"]], "ask_youtube_playlists.question_answering.generative": [[2, 2, 1, "", "LLMSpec"], [2, 1, 1, "", "get_generative_answer"], [2, 1, 1, "", "get_model_spec"], [2, 1, 1, "", "load_model"]], "ask_youtube_playlists.question_answering.generative.LLMSpec": [[2, 3, 1, "", "max_tokens"], [2, 3, 1, "id0", "model_name"], [2, 3, 1, "id1", "model_type"]], "ask_youtube_playlists.question_answering.retriever": [[2, 2, 1, "", "DocumentInfo"], [2, 2, 1, "", "Retriever"]], "ask_youtube_playlists.question_answering.retriever.DocumentInfo": [[2, 3, 1, "id2", "document"], [2, 3, 1, "id3", "playlist_name"], [2, 3, 1, "id4", "score"]], "ask_youtube_playlists.question_answering.retriever.Retriever": [[2, 4, 1, "", "cosine_distance"], [2, 4, 1, "", "retrieve"], [2, 4, 1, "", "retrieve_from_playlist"], [2, 5, 1, "", "total_number_of_documents"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"]}, "titleterms": {"ask_youtube_playlist": [0, 1, 2], "packag": [0, 1, 2], "subpackag": 0, "modul": [0, 1, 2], "content": [0, 1, 2], "data_process": 1, "submodul": [1, 2], "create_docu": 1, "create_embed": 1, "download_transcript": 1, "util": 1, "question_answ": 2, "extract": 2, "gener": 2, "retriev": 2, "welcom": 3, "ask": [3, 4], "youtub": [3, 4], "playlist": [3, 4], "": 3, "document": 3, "indic": 3, "tabl": 3}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx_last_updated_by_git": 1, "sphinx": 57}, "alltitles": {"ask_youtube_playlists package": [[0, "ask-youtube-playlists-package"]], "Subpackages": [[0, "subpackages"]], "Module contents": [[0, "module-ask_youtube_playlists"], [1, "module-ask_youtube_playlists.data_processing"], [2, "module-ask_youtube_playlists.question_answering"]], "ask_youtube_playlists.data_processing package": [[1, "ask-youtube-playlists-data-processing-package"]], "Submodules": [[1, "submodules"], [2, "submodules"]], "ask_youtube_playlists.data_processing.create_documents module": [[1, "module-ask_youtube_playlists.data_processing.create_documents"]], "ask_youtube_playlists.data_processing.create_embeddings module": [[1, "module-ask_youtube_playlists.data_processing.create_embeddings"]], "ask_youtube_playlists.data_processing.download_transcripts module": [[1, "module-ask_youtube_playlists.data_processing.download_transcripts"]], "ask_youtube_playlists.data_processing.utils module": [[1, "module-ask_youtube_playlists.data_processing.utils"]], "ask_youtube_playlists.question_answering package": [[2, "ask-youtube-playlists-question-answering-package"]], "ask_youtube_playlists.question_answering.extractive module": [[2, "module-ask_youtube_playlists.question_answering.extractive"]], "ask_youtube_playlists.question_answering.generative module": [[2, "module-ask_youtube_playlists.question_answering.generative"]], "ask_youtube_playlists.question_answering.retriever module": [[2, "module-ask_youtube_playlists.question_answering.retriever"]], "Welcome to Ask YouTube Playlists\u2019s documentation!": [[3, "welcome-to-ask-youtube-playlists-s-documentation"]], "Indices and tables": [[3, "indices-and-tables"]], "ask-youtube-playlists": [[4, "ask-youtube-playlists"]]}, "indexentries": {"ask_youtube_playlists": [[0, "module-ask_youtube_playlists"]], "module": [[0, "module-ask_youtube_playlists"], [1, "module-ask_youtube_playlists.data_processing"], [1, "module-ask_youtube_playlists.data_processing.create_documents"], [1, "module-ask_youtube_playlists.data_processing.create_embeddings"], [1, "module-ask_youtube_playlists.data_processing.download_transcripts"], [1, "module-ask_youtube_playlists.data_processing.utils"], [2, "module-ask_youtube_playlists.question_answering"], [2, "module-ask_youtube_playlists.question_answering.extractive"], [2, "module-ask_youtube_playlists.question_answering.generative"], [2, "module-ask_youtube_playlists.question_answering.retriever"]], "embeddingmodelspec (class in ask_youtube_playlists.data_processing.create_embeddings)": [[1, "ask_youtube_playlists.data_processing.create_embeddings.EmbeddingModelSpec"]], "ask_youtube_playlists.data_processing": [[1, "module-ask_youtube_playlists.data_processing"]], "ask_youtube_playlists.data_processing.create_documents": [[1, "module-ask_youtube_playlists.data_processing.create_documents"]], "ask_youtube_playlists.data_processing.create_embeddings": [[1, "module-ask_youtube_playlists.data_processing.create_embeddings"]], "ask_youtube_playlists.data_processing.download_transcripts": [[1, "module-ask_youtube_playlists.data_processing.download_transcripts"]], "ask_youtube_playlists.data_processing.utils": [[1, "module-ask_youtube_playlists.data_processing.utils"]], "create_chunked_data() (in module ask_youtube_playlists.data_processing.download_transcripts)": [[1, "ask_youtube_playlists.data_processing.download_transcripts.create_chunked_data"]], "create_embeddings_pipeline() (in module ask_youtube_playlists.data_processing.create_embeddings)": [[1, "ask_youtube_playlists.data_processing.create_embeddings.create_embeddings_pipeline"]], "create_vectorstore() (in module ask_youtube_playlists.data_processing.create_embeddings)": [[1, "ask_youtube_playlists.data_processing.create_embeddings.create_vectorstore"]], "download_playlist() (in module ask_youtube_playlists.data_processing.download_transcripts)": [[1, "ask_youtube_playlists.data_processing.download_transcripts.download_playlist"]], "download_transcript() (in module ask_youtube_playlists.data_processing.download_transcripts)": [[1, "ask_youtube_playlists.data_processing.download_transcripts.download_transcript"]], "extract_documents_from_list_of_dicts() (in module ask_youtube_playlists.data_processing.create_documents)": [[1, "ask_youtube_playlists.data_processing.create_documents.extract_documents_from_list_of_dicts"]], "get_available_directories() (in module ask_youtube_playlists.data_processing.utils)": [[1, "ask_youtube_playlists.data_processing.utils.get_available_directories"]], "get_device() (in module ask_youtube_playlists.data_processing.utils)": [[1, "ask_youtube_playlists.data_processing.utils.get_device"]], "get_documents_from_directory() (in module ask_youtube_playlists.data_processing.create_documents)": [[1, "ask_youtube_playlists.data_processing.create_documents.get_documents_from_directory"]], "get_embedding_model() (in module ask_youtube_playlists.data_processing.create_embeddings)": [[1, "ask_youtube_playlists.data_processing.create_embeddings.get_embedding_model"]], "get_embedding_spec() (in module ask_youtube_playlists.data_processing.create_embeddings)": [[1, "ask_youtube_playlists.data_processing.create_embeddings.get_embedding_spec"]], "is_youtube_playlist() (in module ask_youtube_playlists.data_processing.utils)": [[1, "ask_youtube_playlists.data_processing.utils.is_youtube_playlist"]], "load_embeddings() (in module ask_youtube_playlists.data_processing.create_embeddings)": [[1, "ask_youtube_playlists.data_processing.create_embeddings.load_embeddings"]], "load_hyperparams() (in module ask_youtube_playlists.data_processing.create_embeddings)": [[1, "ask_youtube_playlists.data_processing.create_embeddings.load_hyperparams"]], "load_vectorstore() (in module ask_youtube_playlists.data_processing.create_embeddings)": [[1, "ask_youtube_playlists.data_processing.create_embeddings.load_vectorstore"]], "max_seq_length (ask_youtube_playlists.data_processing.create_embeddings.embeddingmodelspec attribute)": [[1, "ask_youtube_playlists.data_processing.create_embeddings.EmbeddingModelSpec.max_seq_length"], [1, "id0"]], "model_name (ask_youtube_playlists.data_processing.create_embeddings.embeddingmodelspec attribute)": [[1, "ask_youtube_playlists.data_processing.create_embeddings.EmbeddingModelSpec.model_name"], [1, "id1"]], "model_type (ask_youtube_playlists.data_processing.create_embeddings.embeddingmodelspec attribute)": [[1, "ask_youtube_playlists.data_processing.create_embeddings.EmbeddingModelSpec.model_type"], [1, "id2"]], "save_json() (in module ask_youtube_playlists.data_processing.create_embeddings)": [[1, "ask_youtube_playlists.data_processing.create_embeddings.save_json"]], "save_vectorstore() (in module ask_youtube_playlists.data_processing.create_embeddings)": [[1, "ask_youtube_playlists.data_processing.create_embeddings.save_vectorstore"]], "documentinfo (class in ask_youtube_playlists.question_answering.retriever)": [[2, "ask_youtube_playlists.question_answering.retriever.DocumentInfo"]], "llmspec (class in ask_youtube_playlists.question_answering.generative)": [[2, "ask_youtube_playlists.question_answering.generative.LLMSpec"]], "retriever (class in ask_youtube_playlists.question_answering.retriever)": [[2, "ask_youtube_playlists.question_answering.retriever.Retriever"]], "ask_youtube_playlists.question_answering": [[2, "module-ask_youtube_playlists.question_answering"]], "ask_youtube_playlists.question_answering.extractive": [[2, "module-ask_youtube_playlists.question_answering.extractive"]], "ask_youtube_playlists.question_answering.generative": [[2, "module-ask_youtube_playlists.question_answering.generative"]], "ask_youtube_playlists.question_answering.retriever": [[2, "module-ask_youtube_playlists.question_answering.retriever"]], "cosine_distance() (ask_youtube_playlists.question_answering.retriever.retriever static method)": [[2, "ask_youtube_playlists.question_answering.retriever.Retriever.cosine_distance"]], "document (ask_youtube_playlists.question_answering.retriever.documentinfo attribute)": [[2, "ask_youtube_playlists.question_answering.retriever.DocumentInfo.document"], [2, "id2"]], "get_extractive_answer() (in module ask_youtube_playlists.question_answering.extractive)": [[2, "ask_youtube_playlists.question_answering.extractive.get_extractive_answer"]], "get_generative_answer() (in module ask_youtube_playlists.question_answering.generative)": [[2, "ask_youtube_playlists.question_answering.generative.get_generative_answer"]], "get_model_spec() (in module ask_youtube_playlists.question_answering.generative)": [[2, "ask_youtube_playlists.question_answering.generative.get_model_spec"]], "load_model() (in module ask_youtube_playlists.question_answering.generative)": [[2, "ask_youtube_playlists.question_answering.generative.load_model"]], "max_tokens (ask_youtube_playlists.question_answering.generative.llmspec attribute)": [[2, "ask_youtube_playlists.question_answering.generative.LLMSpec.max_tokens"]], "model_name (ask_youtube_playlists.question_answering.generative.llmspec attribute)": [[2, "ask_youtube_playlists.question_answering.generative.LLMSpec.model_name"], [2, "id0"]], "model_type (ask_youtube_playlists.question_answering.generative.llmspec attribute)": [[2, "ask_youtube_playlists.question_answering.generative.LLMSpec.model_type"], [2, "id1"]], "playlist_name (ask_youtube_playlists.question_answering.retriever.documentinfo attribute)": [[2, "ask_youtube_playlists.question_answering.retriever.DocumentInfo.playlist_name"], [2, "id3"]], "retrieve() (ask_youtube_playlists.question_answering.retriever.retriever class method)": [[2, "ask_youtube_playlists.question_answering.retriever.Retriever.retrieve"]], "retrieve_from_playlist() (ask_youtube_playlists.question_answering.retriever.retriever method)": [[2, "ask_youtube_playlists.question_answering.retriever.Retriever.retrieve_from_playlist"]], "score (ask_youtube_playlists.question_answering.retriever.documentinfo attribute)": [[2, "ask_youtube_playlists.question_answering.retriever.DocumentInfo.score"], [2, "id4"]], "total_number_of_documents (ask_youtube_playlists.question_answering.retriever.retriever property)": [[2, "ask_youtube_playlists.question_answering.retriever.Retriever.total_number_of_documents"]]}})